[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pdf-to-markdown"
version = "1.0.0"
description = "고품질 PDF를 Markdown으로 변환하는 도구"
authors = [{name = "Your Name", email = "your.email@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Text Processing",
    "Topic :: Office/Business",
]
dependencies = [
    "pymupdf>=1.23.0",
    "pdfplumber>=0.10.0",
    "Pillow>=10.0.0",
    "click>=8.1.0",
    "pyyaml>=6.0",
    "tqdm>=4.65.0",
    "dataclasses; python_version<'3.7'",
]

[project.urls]
Homepage = "https://github.com/yourusername/pdf-to-markdown"
Documentation = "https://github.com/yourusername/pdf-to-markdown#readme"
Repository = "https://github.com/yourusername/pdf-to-markdown"
Issues = "https://github.com/yourusername/pdf-to-markdown/issues"

[project.scripts]
pdf2md = "src.pdf_to_markdown.main:cli"

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pre-commit>=3.3.0",
    "types-PyYAML>=6.0.0",
    "types-tqdm>=4.65.0",
    "types-Pillow>=10.0.0",
]

# Black 설정
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded by a negative lookahead assertion to exclude
# files that shouldn't be reformatted
/(
  (
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

# isort 설정
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pdf_to_markdown"]

# mypy 설정
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["fitz", "pdfplumber.*"]
ignore_missing_imports = true

# pytest 설정
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=src/pdf_to_markdown",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-branch",
]

# Coverage 설정
[tool.coverage.run]
source = ["src/pdf_to_markdown"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 